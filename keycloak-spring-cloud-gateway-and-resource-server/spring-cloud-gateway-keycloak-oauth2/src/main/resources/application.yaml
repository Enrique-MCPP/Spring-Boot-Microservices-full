spring:
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowed-origins: "*"
            allowed-headers: "*"
            allowed-methods: "*"
            exposed-headers: "*"
      default-filters:
        - TokenRelay

  security:
    oauth2:
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8080/realms/My-Realm
            # Individual properties can also be provided this way
#            token-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/token
#            authorization-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/auth
#            userinfo-uri: http://localhost:8080/auth/realms/amrutrealm/protocol/openid-connect/userinfo
#            user-name-attribute: preferred_username
        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            scope: openid
            client-id: spring-gateway-client
            client-secret: vhYfNmUrDq6v5A4zPksxHIseGAOpfJcF
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
# Enable these to debug the Authorization flow
logging:
    level:
      org:
        springframework:
          security:
            web: DEBUG
server:
  port: 9090

management:
  endpoints:
    web:
      exposure:
        include: "*"